<?php
namespace foonoo\commands;

use clearice\io\Io;
use foonoo\CommandInterface;
use ntentan\utils\Filesystem;
use ntentan\utils\exceptions\FileAlreadyExistsException;

class CreateCommand implements CommandInterface
{
    private $io;
    
    public function __construct(Io $io)
    {
        $this->io = $io;
    }
    
    public function execute(array $options = [])
    {
        $this->writeDefaultSiteYml($options);
        $this->writeDefaultFoonoo($options);
    }
    
    /**
     * Creates a new site.yml file in the target directory.
     * In case one exists, notify and skip. In cases where it is forced overwrite the existing.
     * 
     * @param array $options
     */
    private function writeDefaultSiteYml(array $options) : void
    {
        $inputPath = $options['input'] ?? '.';
        $file = Filesystem::file($inputPath . "/site.yml");
        try {
            Filesystem::checkNotExists($file->getPath());
        } catch (FileAlreadyExistsException $e) {
            if(!isset($options['force'])) {
                $this->io->error("A site probably exists in this location; a site.yml file was found in location {$file->getPath()}.\n");
                exit(102);
            }
        }
        
        // Any other elegant way? templates?
        $input = 
        <<< SITE_YML
        # Default configuration generated by 

        type: {$options['type']}
        
        SITE_YML;
        
        $input .= (isset($options['name'])
                ? 'name: "' . addslashes($options['name']) . "."
                : '# name: "Name your site"') . "\n"; 
        $input .= (isset($options['description']) 
                ? 'description: "' . addslashes($options['description']) . '"' 
                : '# description: provide a description for your site here') . "\n";
        $input .= (isset($options['url']) ? "url: {$options['url']}" : "# url: https://yoursite.url") . "\n";
        
        $input .= 
        <<< SITE_YML
        # plugins:
        #   - contrib/highlight
        #   - contrib/responsive-images
        SITE_YML;
        
        $file->putContents($input);
        $paths = ['_foonoo/images', '_foonoo/assets'];
        foreach($paths as $path) {
            $dir = Filesystem::directory("$inputPath/$path");
            $dir->createIfNotExists(true);
        }
        
    }
    
    /**
     * Creates a new _foonoo directory.
     * In case one exists, notify and skip. In cases where it is forced overwrite the existing.
     *
     * @param array $options
     */
    private function writeDefaultFoonoo(array $options) : void
    {
        
    }
}

